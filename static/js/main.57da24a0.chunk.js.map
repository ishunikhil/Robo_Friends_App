{"version":3,"sources":["reportWebVitals.js","Cards.js","CardList.js","SearchBox.js","Scroll.js","App.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Cards","name","email","id","className","alt","src","CardList","robots","map","user","i","SearchBox","searchfield","searchChange","type","placeholder","onChange","Scroll","props","style","overflow","border","height","children","App","onSearchChange","event","setState","target","value","state","fetch","response","json","users","filterRobots","this","filter","toLowerCase","includes","length","Component","ReactDOM","render","document","getElementById"],"mappings":"0MAYeA,G,MAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,Q,mDCSCQ,EAbH,SAAC,GAAmB,IAAlBC,EAAiB,EAAjBA,KAAKC,EAAY,EAAZA,MAAMC,EAAM,EAANA,GACrB,OACI,sBAAKC,UAAU,4CAAf,UACI,qBAAKC,IAAI,SAASC,IAAG,gCAA2BH,EAA3B,cACrB,gCACI,6BAAKF,IACL,4BAAIC,WCeLK,EArBA,SAAC,GAAY,IAAXC,EAAU,EAAVA,OACb,OACI,8BAEQA,EAAOC,KAAI,SAACC,EAAKC,GACb,OACI,cAAC,EAAD,CAEIR,GAAIK,EAAOG,GAAGR,GACdF,KAAMO,EAAOG,GAAGV,KAChBC,MAAOM,EAAOG,GAAGT,OAHZS,SCOlBC,EAfC,SAAC,GAA6B,EAA5BC,YAA6B,IAAjBC,EAAgB,EAAhBA,aAC1B,OACI,qBAAKV,UAAU,MAAf,SACI,uBACAA,UAAU,mCACVW,KAAK,SACLC,YAAY,gBACZC,SAAUH,OCCPI,G,MARF,SAACC,GACV,OACI,qBAAKC,MAAO,CAACC,SAAS,SAAUC,OAAO,kBAAoBC,OAAO,SAAlE,SACKJ,EAAMK,aCuCJC,E,kDApCX,aAAc,IAAD,8BACT,gBAWJC,eAAiB,SAACC,GACd,EAAKC,SAAS,CAACf,YAAac,EAAME,OAAOC,SAXzC,EAAKC,MAAO,CACRvB,OAAQ,GACRK,YAAa,IAJR,E,qDAOb,WAAoB,IAAD,OACfmB,MAAM,8CACLtC,MAAK,SAAAuC,GAAQ,OAAEA,EAASC,UACxBxC,MAAK,SAAAyC,GAAK,OAAI,EAAKP,SAAS,CAACpB,OAAO2B,S,oBAKzC,WAAS,IAAD,OACEC,EAAaC,KAAKN,MAAMvB,OAAO8B,QAAO,SAAA9B,GACxC,OAAOA,EAAOP,KAAKsC,cAAcC,SAAS,EAAKT,MAAMlB,YAAY0B,kBAErE,OAA8B,IAA3BF,KAAKN,MAAMvB,OAAOiC,OACX,oBAAIrC,UAAU,KAAd,wBAGF,sBAAKA,UAAU,KAAf,UACI,oBAAIA,UAAU,KAAd,yBACA,cAAC,EAAD,CAAWU,aAAcuB,KAAKX,iBAC9B,cAAC,EAAD,UACI,cAAC,EAAD,CAAUlB,OAAQ4B,a,GA5BxBM,aCClBC,IAASC,OACP,8BACE,cAAC,EAAD,MAIFC,SAASC,eAAe,SAM1BvD,M","file":"static/js/main.57da24a0.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","\r\nimport React from \"react\";\r\nimport './Cards.css';\r\nconst Cards=({name,email,id})=>{\r\n    return(\r\n        <div className='card tc dib br3 pa3 ma2 grow bw2 shadow-5'>\r\n            <img alt='robots' src={`https://robohash.org//${id}?200x200`}></img>\r\n            <div>\r\n                <h2>{name}</h2>\r\n                <p>{email}</p>\r\n            </div>\r\n            \r\n        </div>\r\n    );\r\n\r\n}\r\nexport default Cards;","import React from \"react\";\r\nimport Cards from \"./Cards\";\r\n\r\nconst CardList=({robots})=>{\r\n    return(\r\n        <div>\r\n            {\r\n                robots.map((user,i)=>{\r\n                    return(\r\n                        <Cards \r\n                            key={i} \r\n                            id={robots[i].id } \r\n                            name={robots[i].name} \r\n                            email={robots[i].email} \r\n                        />\r\n                    );\r\n                })\r\n            }\r\n            \r\n        </div>\r\n        \r\n    );\r\n\r\n}\r\nexport default CardList;","import React from \"react\";\r\n\r\nconst SearchBox=({searchfield,searchChange})=>{\r\n    return(\r\n        <div className='pa2'>\r\n            <input\r\n            className='pa3 ba b--green bg-lightest-blue' \r\n            type='search' \r\n            placeholder='Search robots'\r\n            onChange={searchChange}\r\n            />\r\n            \r\n        </div>\r\n        \r\n    );\r\n\r\n}\r\nexport default SearchBox;","import React from \"react\";\r\n\r\nconst Scroll=(props)=>{\r\n    return(\r\n        <div style={{overflow:'scroll', border:'2px solid black' , height:'800px'}}>\r\n            {props.children}\r\n        </div>\r\n    );\r\n    \r\n};\r\nexport default Scroll;","import React from \"react\";\r\nimport { Component } from \"react\";\r\nimport CardList from \"./CardList\";\r\nimport SearchBox from \"./SearchBox\";\r\nimport './App.css';\r\nimport Scroll from './Scroll';\r\n\r\nclass App extends Component{\r\n    constructor(){\r\n        super()\r\n        this.state ={\r\n            robots: [],\r\n            searchfield: ''\r\n        }\r\n    }\r\n    componentDidMount(){\r\n        fetch('https://jsonplaceholder.typicode.com/users')\r\n        .then(response=>response.json())\r\n        .then(users => this.setState({robots:users}));\r\n    }\r\n    onSearchChange = (event)=>{\r\n        this.setState({searchfield: event.target.value})\r\n    }\r\n    render(){\r\n        const filterRobots=this.state.robots.filter(robots =>{\r\n            return robots.name.toLowerCase().includes(this.state.searchfield.toLowerCase())\r\n        })\r\n        if(this.state.robots.length===0){\r\n            return<h1 className='tc'>Loading...</h1>\r\n        }else{\r\n            return(\r\n                <div className='tc'>\r\n                    <h1 className='f1'>RoboFriends</h1>\r\n                    <SearchBox searchChange={this.onSearchChange}/>\r\n                    <Scroll>\r\n                        <CardList robots={filterRobots} />\r\n                    </Scroll>\r\n                </div>\r\n            \r\n            );\r\n        }\r\n       \r\n    }\r\n}\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\nimport App from './App';\n\n\nReactDOM.render(\n  <div>\n    <App/>\n  </div>\n  \n  ,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}